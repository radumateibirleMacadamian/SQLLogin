/*
Deployment script for LoginExample

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LoginExample"
:setvar DefaultFilePrefix "LoginExample"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file 9c6e6d77-314b-4339-a0ff-4652bc5524e7';

PRINT N'Rename [dbo].[PersonalDetails].[PhoneNubmer] to PhoneNumber';


GO
EXECUTE sp_rename @objname = N'[dbo].[PersonalDetails].[PhoneNubmer]', @newname = N'PhoneNumber', @objtype = N'COLUMN';


GO
PRINT N'Creating [dbo].[DisplayName]...';


GO
CREATE FUNCTION [dbo].[DisplayName]
(
	@FirstName nvarchar(40),
	@LastName nvarchar(20)
)
RETURNS INT
AS
BEGIN
	RETURN @FirstName + ' ' + @LastName
END
GO
PRINT N'Creating [dbo].[AddDetails]...';


GO
CREATE PROCEDURE [dbo].[AddDetails]
	@Email NVARCHAR(50),
    @PhoneNumber NCHAR (14),
    @Address NVARCHAR (50),
    @City NVARCHAR (20),
    @Country NVARCHAR (20)
AS
	DECLARE @DetailsID int

	INSERT INTO PersonalDetails (PhoneNumber, Address, City, Country) VALUES (@PhoneNumber, @Address, @City, @Country)
	SELECT @DetailsID = SCOPE_IDENTITY()
	
	UPDATE [User] SET Details = @DetailsID where Email = @Email
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9c6e6d77-314b-4339-a0ff-4652bc5524e7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9c6e6d77-314b-4339-a0ff-4652bc5524e7')

GO

GO
PRINT N'Update complete.';


GO
